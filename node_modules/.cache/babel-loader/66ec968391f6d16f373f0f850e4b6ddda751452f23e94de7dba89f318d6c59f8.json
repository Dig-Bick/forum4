{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Recommended Posts\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Categories\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recommendedPosts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.post_id\n    }, _toDisplayString(post.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category.category_id\n    }, _toDisplayString(category.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","recommendedPosts","post","key","post_id","title","_hoisted_2","categories","category","category_id","name"],"sources":["D:\\idea\\forum4\\frontend\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Recommended Posts</h2>\r\n    <ul>\r\n      <li v-for=\"post in recommendedPosts\" :key=\"post.post_id\">\r\n        {{ post.title }}\r\n      </li>\r\n    </ul>\r\n    <h2>Categories</h2>\r\n    <ul>\r\n      <li v-for=\"category in categories\" :key=\"category.category_id\">\r\n        {{ category.name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      recommendedPosts: [],\r\n      categories: [],\r\n    };\r\n  },\r\n  async mounted() {\r\n    const userId = 1; // Replace this with the actual user ID\r\n    const postsResponse = await axios.get(`/api/posts/recommend?userId=${userId}`);\r\n    this.recommendedPosts = postsResponse.data;\r\n\r\n    const categoriesResponse = await axios.get(\"/api/categories/all\");\r\n    this.categories = categoriesResponse.data;\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;gCAMrBA,mBAAA,CAAmB,YAAf,YAAU;;;uBAPhBC,mBAAA,CAaM,cAZJC,UAA0B,EAC1BF,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFcC,KAAA,CAAAC,gBAAgB,EAAxBC,IAAI;yBAAfN,mBAAA,CAEK;MAFiCO,GAAG,EAAED,IAAI,CAACE;wBAC3CF,IAAI,CAACG,KAAK;oCAGjBC,UAAmB,EACnBX,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFkBC,KAAA,CAAAO,UAAU,EAAtBC,QAAQ;yBAAnBZ,mBAAA,CAEK;MAF+BO,GAAG,EAAEK,QAAQ,CAACC;wBAC7CD,QAAQ,CAACE,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}