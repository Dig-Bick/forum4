{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($data.category.name), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'post-details',\n        params: {\n          id: post.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(post.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","category","name","_Fragment","_renderList","posts","post","key","id","_createVNode","_component_router_link","to","params","title"],"sources":["D:\\idea\\forum4\\frontend\\src\\components\\CategoryDetails.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>{{ category.name }}</h2>\r\n    <ul>\r\n      <li v-for=\"post in posts\" :key=\"post.id\">\r\n        <router-link :to=\"{ name: 'post-details', params: { id: post.id } }\">\r\n          {{ post.title }}\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      category: {},\r\n      posts: [],\r\n    };\r\n  },\r\n  async created() {\r\n  try {\r\n    const categoryId = this.$route.params.id;\r\n    const categoryResponse = await axios.get(`/api/categories/${categoryId}`);\r\n    this.category = categoryResponse.data;\r\n\r\n    const postsResponse = await axios.get(`/api/categories/${categoryId}/posts`);\r\n    this.posts = postsResponse.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n};\r\n</script>\r\n"],"mappings":";;;uBACEA,mBAAA,CASM,cARJC,mBAAA,CAA4B,YAAAC,gBAAA,CAArBC,KAAA,CAAAC,QAAQ,CAACC,IAAI,kBACpBJ,mBAAA,CAMK,c,kBALHD,mBAAA,CAIKM,SAAA,QAAAC,WAAA,CAJcJ,KAAA,CAAAK,KAAK,EAAbC,IAAI;yBAAfT,mBAAA,CAIK;MAJsBU,GAAG,EAAED,IAAI,CAACE;QACnCC,YAAA,CAEcC,sBAAA;MAFAC,EAAE;QAAAT,IAAA;QAAAU,MAAA;UAAAJ,EAAA,EAAwCF,IAAI,CAACE;QAAE;MAAA;;wBAC7D,MAAgB,C,kCAAbF,IAAI,CAACO,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}